" V i m  C o n f i g
" Conventional stuff make sure gvim is installed
syntax on
set nocompatible 
filetype plugin on
filetype indent on
set viminfo='10000,<10000,s10,h
set incsearch
set hlsearch
set wildmenu
set number
set relativenumber
set mouse=a
set encoding=UTF-8
set clipboard=unnamedplus
set nowrap
set autochdir
set hidden
set splitright
set splitbelow
set formatoptions-=ro
set exrc
set secure

" No backups or swap stuff
set nobackup
set nowb
set noswapfile

" Use spaces instead of tabs, smart tabs, tab = 4'\s'
set expandtab
set smarttab
set shiftwidth=4
set tabstop=4 

" " P R E F E R E N C E S
" Change cursors on insert/normal modes
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" Manual PaperColor Colorscheme
set t_Co=256
set background=dark
colorscheme PaperColor

" Remap jk for fast escape, although Ctrl+c is faster?
inoremap jk <Esc>
nnoremap <S-l> :tabn <cr>
nnoremap <S-h> :tabp <cr>
nnoremap <S-d> :tabclose <cr>

" Better window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j 
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k

" Faster copy
nnoremap Y y$

" Bind redo to `r`
nnoremap r :redo<cr>

" <Ctrl-l> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-l> :nohl<CR><C-l>

" Moving text, uses shift key
nnoremap K :m .-2<CR>==
nnoremap J :m .+1<CR>==
vnoremap K :m '<-2<CR>gv=gv
vnoremap J :m '>+1<CR>gv=gv

" Built-in Terminal, vim 8.1 and above supported
au BufEnter * if &buftype == 'terminal' | :startinsert | endif
nnoremap <silent>tt :term ++rows=10<cr>
tnoremap <silent>tt <c-\><c-n>:q!<cr>

" PLUG-INS
call plug#begin('~/.vim/plugins')
  " Enhancements
    Plug 'tpope/vim-commentary'
    Plug 'jiangmiao/auto-pairs'
    Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
    Plug 'junegunn/fzf.vim'
  " Appearance
    Plug 'itchyny/lightline.vim'
  " Formatting
    Plug 'sbdchd/neoformat'
  " LSP
    Plug 'neoclide/coc.nvim', {'branch': 'release'}
    " Plug 'prabirshrestha/vim-lsp'
    " Plug 'mattn/vim-lsp-settings'
  " Completion
    " Plug 'prabirshrestha/asyncomplete.vim'
    " Plug 'prabirshrestha/asyncomplete-lsp.vim'
  " Snippets
    " Plug 'SirVer/ultisnips'
    " Plug 'honza/vim-snippets'
    " Plug 'prabirshrestha/asyncomplete-ultisnips.vim'
call plug#end()

" [fzf]
" Find root directory and execute :Files
function! s:find_git_root()
  return system('git rev-parse --show-toplevel 2> /dev/null')[:-2]
endfunction
let g:fzf_action = { 'enter': 'tab split' }

command! ProjectFiles execute 'Files' s:find_git_root()

nnoremap <C-p> :ProjectFiles <cr>

" [neoformat] format on save
augroup fmt
  autocmd!
  autocmd BufWritePre * undojoin | Neoformat
augroup END

" [ultisnips] [forward: Ctrl+l, backward: Ctrl+k, expand snippet: enter]
" let g:UltiSnipsJumpForwardTrigger="<c-l>"
" let g:UltiSnipsJumpBackwardTrigger="<c-k>"
" let g:UltiSnipsExpandTrigger = "<nop>"
" inoremap <expr> <CR> pumvisible() ? "<C-R>=UltiSnips#ExpandSnippetOrJump()<CR>" : "\<CR>"
" call asyncomplete#register_source(asyncomplete#sources#ultisnips#get_source_options({
"     \ 'name': 'ultisnips',
"     \ 'allowlist': ['*'],
"     \ 'completor': function('asyncomplete#sources#ultisnips#completor'),
"     \ }))

" " [asyncomplete.vim]
" inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
" inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
" autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif
